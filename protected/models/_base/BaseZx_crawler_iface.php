<?php

/**
 * This is the model base class for the table "zx_crawler_iface".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Zx_crawler_iface".
 *
 * Columns in table "zx_crawler_iface" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $module_name
 * @property integer $v_idx
 * @property string $v1
 * @property string $v2
 * @property string $v3
 * @property string $v4
 * @property string $v5
 * @property string $v6
 * @property string $v7
 * @property string $v8
 * @property string $v9
 * @property string $v10
 * @property string $v11
 * @property string $v12
 * @property string $v13
 * @property string $v14
 * @property string $v15
 * @property string $v16
 * @property string $v17
 * @property string $v18
 * @property string $v19
 * @property string $v20
 * @property string $timestamp
 *
 */
abstract class BaseZx_crawler_iface extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'zx_crawler_iface';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Zx_crawler_iface|Zx_crawler_ifaces', $n);
	}

	public static function representingColumn() {
		return 'module_name';
	}

	public function rules() {
		return array(
			array('module_name', 'required'),
			array('v_idx', 'numerical', 'integerOnly'=>true),
			array('module_name, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14', 'length', 'max'=>255),
			array('v15, v16, v17, v18, v19, v20, timestamp', 'safe'),
			array('v_idx, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, timestamp', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, module_name, v_idx, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, timestamp', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'module_name' => Yii::t('app', 'Module Name'),
			'v_idx' => Yii::t('app', 'V Idx'),
			'v1' => Yii::t('app', 'V1'),
			'v2' => Yii::t('app', 'V2'),
			'v3' => Yii::t('app', 'V3'),
			'v4' => Yii::t('app', 'V4'),
			'v5' => Yii::t('app', 'V5'),
			'v6' => Yii::t('app', 'V6'),
			'v7' => Yii::t('app', 'V7'),
			'v8' => Yii::t('app', 'V8'),
			'v9' => Yii::t('app', 'V9'),
			'v10' => Yii::t('app', 'V10'),
			'v11' => Yii::t('app', 'V11'),
			'v12' => Yii::t('app', 'V12'),
			'v13' => Yii::t('app', 'V13'),
			'v14' => Yii::t('app', 'V14'),
			'v15' => Yii::t('app', 'V15'),
			'v16' => Yii::t('app', 'V16'),
			'v17' => Yii::t('app', 'V17'),
			'v18' => Yii::t('app', 'V18'),
			'v19' => Yii::t('app', 'V19'),
			'v20' => Yii::t('app', 'V20'),
			'timestamp' => Yii::t('app', 'Timestamp'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('module_name', $this->module_name, true);
		$criteria->compare('v_idx', $this->v_idx);
		$criteria->compare('v1', $this->v1, true);
		$criteria->compare('v2', $this->v2, true);
		$criteria->compare('v3', $this->v3, true);
		$criteria->compare('v4', $this->v4, true);
		$criteria->compare('v5', $this->v5, true);
		$criteria->compare('v6', $this->v6, true);
		$criteria->compare('v7', $this->v7, true);
		$criteria->compare('v8', $this->v8, true);
		$criteria->compare('v9', $this->v9, true);
		$criteria->compare('v10', $this->v10, true);
		$criteria->compare('v11', $this->v11, true);
		$criteria->compare('v12', $this->v12, true);
		$criteria->compare('v13', $this->v13, true);
		$criteria->compare('v14', $this->v14, true);
		$criteria->compare('v15', $this->v15, true);
		$criteria->compare('v16', $this->v16, true);
		$criteria->compare('v17', $this->v17, true);
		$criteria->compare('v18', $this->v18, true);
		$criteria->compare('v19', $this->v19, true);
		$criteria->compare('v20', $this->v20, true);
		$criteria->compare('timestamp', $this->timestamp, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}